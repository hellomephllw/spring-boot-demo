buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.llw'
version = '0.0.1'
sourceCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
}

project.ext {
	expressVersion = '1.0.0'
	aliJsonVersion = '1.1.15'
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springframework.boot:spring-boot-starter-jdbc")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("com.llw:express:$expressVersion")
	implementation("com.alibaba:fastjson:$aliJsonVersion")
	runtimeOnly("mysql:mysql-connector-java")
	compileOnly("org.projectlombok:lombok")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
}

//生成基础代码task
task generateBasicCode (type: JavaExec, dependsOn: classes) {
	main = 'com.llw.express.code.BasicCodeGenerator'
	classpath = sourceSets.main.compileClasspath
	args basePackagePath
}

//生成表格task(开发环境)
task generateTableDev (type: JavaExec, dependsOn: classes) {
	main = 'com.llw.express.persist.mysql.TableGenerator'
	classpath = sourceSets.main.compileClasspath
	args 'dev'
}
//生成表格task(测试环境)
task generateTableTest (type: JavaExec, dependsOn: classes) {
	main = 'com.llw.express.persist.mysql.TableGenerator'
	classpath = sourceSets.main.compileClasspath
	args 'test'
}
//生成表格task(生产环境)
task generateTableProd (type: JavaExec, dependsOn: classes) {
	main = 'com.llw.express.persist.mysql.TableGenerator'
	classpath = sourceSets.main.compileClasspath
	args 'prod'
}