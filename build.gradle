buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.llw'
version = '0.0.1'
sourceCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
}

project.ext {
	happyDevVersion = '2.0.0'
	aliJsonVersion = '1.1.15'
	swaggerVersion = '2.9.2'
	janinoVersion = '2.6.1'
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springframework.boot:spring-boot-starter-jdbc")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-starter-data-redis")
	implementation("org.springframework.boot:spring-boot-starter-mail")
	implementation("org.springframework.boot:spring-boot-starter-freemarker")
	implementation("com.llw:happy-dev:$happyDevVersion")
	implementation("com.alibaba:fastjson:$aliJsonVersion")
	implementation("io.springfox:springfox-swagger2:$swaggerVersion")
	implementation("io.springfox:springfox-swagger-ui:$swaggerVersion")
	implementation("org.codehaus.janino:janino:$janinoVersion")
	runtimeOnly("mysql:mysql-connector-java")
	compileOnly("org.projectlombok:lombok")
	testCompile("org.projectlombok:lombok")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
}

/**生成基础代码task*/
task code (type: JavaExec, dependsOn: classes) {
	main = 'com.happy.express.code.BasicCodeGenerator'
	classpath = sourceSets.main.compileClasspath
	args ([basePackagePath] as String[])
}

/**表生成task*/
//生成表格task(开发环境, 检查数据库表字段)
task devCheck (type: JavaExec, dependsOn: classes) {
	main = 'com.happy.express.persist.mysql.TableGenerator'
	classpath = sourceSets.main.compileClasspath
	args (['dev', 'check', basePackagePath] as String[])
}
//生成表格task(开发环境, 执行增量操作)
task devIncrement (type: JavaExec, dependsOn: classes) {
	main = 'com.happy.express.persist.mysql.TableGenerator'
	classpath = sourceSets.main.compileClasspath
	args (['dev', 'increment', basePackagePath] as String[])
}
//生成表格task(开发环境, 删改数据库字段)
task devForce (type: JavaExec, dependsOn: classes) {
	main = 'com.happy.express.persist.mysql.TableGenerator'
	classpath = sourceSets.main.compileClasspath
	args (['dev', 'force', basePackagePath] as String[])
}

//生成表格task(测试环境, 检查数据库表字段)
task testCheck (type: JavaExec, dependsOn: classes) {
	main = 'com.happy.express.persist.mysql.TableGenerator'
	classpath = sourceSets.main.compileClasspath
	args (['test', 'check', basePackagePath] as String[])
}
//生成表格task(测试环境, 执行增量操作)
task testIncrement (type: JavaExec, dependsOn: classes) {
	main = 'com.happy.express.persist.mysql.TableGenerator'
	classpath = sourceSets.main.compileClasspath
	args (['test', 'increment', basePackagePath] as String[])
}
//生成表格task(测试环境, 删改数据库字段)
task testForce (type: JavaExec, dependsOn: classes) {
	main = 'com.happy.express.persist.mysql.TableGenerator'
	classpath = sourceSets.main.compileClasspath
	args (['test', 'force', basePackagePath] as String[])
}

//生成表格task(生产环境, 检查数据库表字段)
task prodCheck (type: JavaExec, dependsOn: classes) {
	main = 'com.happy.express.persist.mysql.TableGenerator'
	classpath = sourceSets.main.compileClasspath
	args (['prod', 'check', basePackagePath] as String[])
}
//生成表格task(生产环境, 执行增量操作)
task prodIncrement (type: JavaExec, dependsOn: classes) {
	main = 'com.happy.express.persist.mysql.TableGenerator'
	classpath = sourceSets.main.compileClasspath
	args (['prod', 'increment', basePackagePath] as String[])
}
//生成表格task(生产环境, 删改数据库字段)
task prodForce (type: JavaExec, dependsOn: classes) {
	main = 'com.happy.express.persist.mysql.TableGenerator'
	classpath = sourceSets.main.compileClasspath
	args (['prod', 'force', basePackagePath] as String[])
}